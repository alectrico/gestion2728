-#if current_user.nil?
=form_for User.new,:remote => true,:only_path => false do |f|
  -#form_errors_for User.new
  = tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token)
  .form-group
    .col-sm-6
      = f.text_field :name, :class => "form-control",:placeholder => "Nombre"
  .form-group
    .col-sm-6
      = f.text_field :email,:class => "form-control",:placeholder => "email"
  .form-group
    .col-sm-6
      = f.password_field :password,:class => "form-control", :placeholder => "password"
  .form-group
    .col-sm-6
      = f.password_field :password_confirmation ,:class => "form-control",:placeholder => "confirmaciÃ³n de password"
  .form-group
    .col-sm-6
      = f.text_field :fono ,:class => "form-control",:placeholder => "fono"

  .col-sm-12
    = f.submit "Login/Registro",:class => "btn btn-lg"

%script
  $("#new_user").validate({
  rules:{
  "user[name]": {required:true},
  "user[email]": {required:true, email:true},
  "user[password]": {minlength: 6, required:true},
  "user[password_confirmation]": { required:true, equalTo: "#user_password"},
  "user[fono]": {minlength: 9, maxlength:9, required:true, digits:true}
  },
  submitHandler: function(form){
  console.log(validator.element('#cliente[fono]'));

  //location.reload();
  //owLoadingScreen();
  }});

