%noscript
  :css   
    .column.over{ 
      border: 4px dashed #000;
    }

%script
  /$(document).ready(function(){
  /$(".column").on("click",function(event){
  /alert($(this).text());
  /});
  //alert('hola');
  /});



  function handleDragOver(e) {
  if (e.preventDefault) {
  e.preventDefault(); // Necessary. Allows us to drop.
  }

  e.dataTransfer.dropEffect = 'copy';  // See the section on the DataTransfer object.

  return false;
  }  



  function handleDragEnter(e) {
  // this / e.target is the current hover target.
  this.classList.add('over');
  
  }



  function handleDragLeave(e) {
  this.classList.remove('over');  // this / e.target is previous target element.
  }




  function handleDrop(e) {
  // this / e.target is current target element.

  if (e.stopPropagation) {
  e.stopPropagation(); // stops the browser from redirecting.
  }
  alert('Drop')
  // See the section on the DataTransfer object.

  return false;
  }


  function handleDrop(e) {
  // this/e.target is current target element.

  if (e.stopPropagation) {
  e.stopPropagation(); // Stops some browsers from redirecting.
  }

  // Don't do anything if dropping the same column we're dragging.
  if (dragSrcEl != this) {
  // Set the source column's HTML to the HTML of the columnwe dropped on.
  /ragSrcEl.innerHTML = this.innerHTML;
  this.innerHTML = e.dataTransfer.getData('text/html');
  this.style.opacity = '1';
  }

  return false;
  }

  function handleDragEnd(e) {
  // this/e.target is the source node.

  [].forEach.call(cols, function (col) {
  col.classList.remove('over');
  });
  }




  var cols = document.querySelectorAll('#biblioteca .column');
  [].forEach.call(cols, function(col) {
  col.addEventListener('dragstart', handleDragStart, false);
  col.addEventListener('dragenter', handleDragEnter, false)
  col.addEventListener('dragover', handleDragOver, false);
  col.addEventListener('dragleave', handleDragLeave, false);
  /col.addEventListener('drop', handleDrop, false);
  col.addEventListener('dragend', handleDragEnd, false);
  });




  var dragSrcEl = null;



  function handleDragStart(e) {
  // Target (this) element is the source node.
  this.style.opacity = '0.4';

  dragSrcEl = this;
  
  e.dataTransfer.effectAllowed = 'copy';
  e.dataTransfer.setData('text/html', this.innerHTML);

  }

  /function handleDrop(e) {
  /e.stopPropagation(); // Stops some browsers from redirecting.
  /e.preventDefault();

  /var files = e.dataTransfer.files;
  /for (var i = 0, f; f = files[i]; i++) {
  // Read the File objects in this FileList.
  /}
  //}

